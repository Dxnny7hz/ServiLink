//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaPresentacioAdmi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ServilinkbdEntities : DbContext
    {
        public ServilinkbdEntities()
            : base("name=ServilinkbdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Consumidor> Consumidor { get; set; }
        public virtual DbSet<Especializaciones> Especializaciones { get; set; }
        public virtual DbSet<Etiqueta> Etiqueta { get; set; }
        public virtual DbSet<HistorialServicios> HistorialServicios { get; set; }
        public virtual DbSet<Notificaciones> Notificaciones { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<ProveedorEtiqueta> ProveedorEtiqueta { get; set; }
        public virtual DbSet<ProveedorServicio> ProveedorServicio { get; set; }
        public virtual DbSet<Servicios> Servicios { get; set; }
        public virtual DbSet<ServiciosCategoria> ServiciosCategoria { get; set; }
        public virtual DbSet<Solicitudes> Solicitudes { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int RegistrarUsuarios(string nombre_completo, string direccion, Nullable<System.DateTime> fecha_Nacimiento, string correo, string telefono, string sexo, string nombre_usuario, string contrasena, string rol, Nullable<int> id_especializacion, string descripcion_perfil, byte[] rimagen_perfil, byte[] documento_frente, byte[] documento_atras, string documento)
        {
            var nombre_completoParameter = nombre_completo != null ?
                new ObjectParameter("nombre_completo", nombre_completo) :
                new ObjectParameter("nombre_completo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("fecha_Nacimiento", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("nombre_usuario", nombre_usuario) :
                new ObjectParameter("nombre_usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            var id_especializacionParameter = id_especializacion.HasValue ?
                new ObjectParameter("id_especializacion", id_especializacion) :
                new ObjectParameter("id_especializacion", typeof(int));
    
            var descripcion_perfilParameter = descripcion_perfil != null ?
                new ObjectParameter("descripcion_perfil", descripcion_perfil) :
                new ObjectParameter("descripcion_perfil", typeof(string));
    
            var rimagen_perfilParameter = rimagen_perfil != null ?
                new ObjectParameter("rimagen_perfil", rimagen_perfil) :
                new ObjectParameter("rimagen_perfil", typeof(byte[]));
    
            var documento_frenteParameter = documento_frente != null ?
                new ObjectParameter("documento_frente", documento_frente) :
                new ObjectParameter("documento_frente", typeof(byte[]));
    
            var documento_atrasParameter = documento_atras != null ?
                new ObjectParameter("documento_atras", documento_atras) :
                new ObjectParameter("documento_atras", typeof(byte[]));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuarios", nombre_completoParameter, direccionParameter, fecha_NacimientoParameter, correoParameter, telefonoParameter, sexoParameter, nombre_usuarioParameter, contrasenaParameter, rolParameter, id_especializacionParameter, descripcion_perfilParameter, rimagen_perfilParameter, documento_frenteParameter, documento_atrasParameter, documentoParameter);
        }
    }
}
